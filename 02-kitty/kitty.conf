# to list all available run: kitty +list-fonts --psnames
font_family             Hack Nerd Font FC Ligatured
#font_family             Hack Nerd Font
#font_family             Monoid Nerd Font
#font_family             Fira Code Nerd Font
italic_font             auto
bold_font               auto
bold_italic_font        auto

font_size 11.0

symbol_map U+23FB-U+23FE,U+2500-U+259F,U+2665,U+26A1,U+2B58,U+E000-U+E00A,U+E0A0-U+E0A3,U+E0B0-U+E0C8,U+E0CA,U+E0CC-U+E0D4,U+E200-U+E2A9,U+E300-U+E3E3,U+E5FA-U+E6B1,U+E700-U+E7C5,U+EA60-U+EBEB,U+F000-U+F2E0,U+F300-U+F372,U+F400-U+F532,U+E276C-U+E2771,U+F0001-U+F1AF0 Symbols Nerd Font


#hide_window_decorations yes

shell fish
notify_on_cmd_finish invisible 10.0 bell

allow_remote_control yes
listen_on unix:@mykitty

scrollback_lines 20000

tab_bar_style powerline
tab_powerline_style round
tab_title_template "{index}: {title}"
tab_bar_min_tabs 1


background_opacity 0.9
inactive_text_alpha 0.8

enable_audio_bell no
cursor_blink_interval 0.7 linear

remember_window_size  no
initial_window_width  640
initial_window_height 400

clear_all_shortcuts yes

map ctrl+shift+c copy_to_clipboard
map ctrl+shift+v paste_from_clipboard

map shift+page_up scroll_page_up
map shift+page_down scroll_page_down
map shift+home scroll_home
map shift+end scroll_end

map ctrl+w close_window
map ctrl+t new_tab

map alt+1 goto_tab 1
map alt+2 goto_tab 2
map alt+3 goto_tab 3
map alt+4 goto_tab 4
map alt+5 goto_tab 5
map alt+6 goto_tab 6
map alt+7 goto_tab 7
map alt+8 goto_tab 8
map alt+9 goto_tab 9

map shift+left previous_tab
map shift+right next_tab
map ctrl+shift+left move_tab_backward
map ctrl+shift+right move_tab_forward

map ctrl+shift+equal change_font_size all +2.0
map ctrl+shift+minus change_font_size all -2.0
map ctrl+shift+backspace change_font_size all 0

map ctrl+shift+f11 toggle_fullscreen

map ctrl+shift+escape kitty_shell window


map ctrl+1 detach_window --target-tab 1
map ctrl+2 detach_window --target-tab 2
map ctrl+3 detach_window --target-tab 3
map ctrl+4 detach_window --target-tab 4
map ctrl+5 detach_window --target-tab 5
map ctrl+6 detach_window --target-tab 6
map ctrl+7 detach_window --target-tab 7
map ctrl+8 detach_window --target-tab 8
map ctrl+9 detach_window --target-tab 9


# double ctrl-a sends ctrl-a to the app
map ctrl+a>ctrl+a send_text all \x01

map ctrl+a>e launch --allow-remote-control kitty +kitten broadcast --match-tab=recent:0


# Split layout

enabled_layouts splits

map ctrl+a>- launch --location=hsplit --cwd=current
map ctrl+a>| launch --location=vsplit --cwd=current

# Switch focus to the neighboring window in the indicated direction
# Detects ViM and sends the keys to ViM instead of switching focus,
# if ViM is running in the current window.
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l

# Move the active window in the indicated direction
map ctrl+a>k move_window up
map ctrl+a>h move_window left
map ctrl+a>l move_window right
map ctrl+a>j move_window down


map ctrl+shift+r start_resizing_window
map alt+o show_last_command_output
